{"ast":null,"code":"import axios from \"axios\";\nconst WEATHER_API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\nconst WEATHER_API_URL = process.env.REACT_APP_WEATHER_API_URL;\nexport const fetchWeatherData = async (lat, lon) => {\n  try {\n    const [weatherResponse, forecastResponse] = await Promise.all([axios.get(`${WEATHER_API_URL}/weather`, {\n      params: {\n        lat,\n        lon,\n        appid: WEATHER_API_KEY,\n        units: \"metric\"\n      }\n    }), axios.get(`${WEATHER_API_URL}/forecast`, {\n      params: {\n        lat,\n        lon,\n        appid: WEATHER_API_KEY,\n        units: \"metric\"\n      }\n    })]);\n    console.log(weatherResponse.data);\n    console.log(forecastResponse.data);\n    return [weatherResponse.data, forecastResponse.data];\n  } catch (error) {\n    console.error(\"Error fetching weather data: \", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","WEATHER_API_KEY","process","env","REACT_APP_WEATHER_API_KEY","WEATHER_API_URL","REACT_APP_WEATHER_API_URL","fetchWeatherData","lat","lon","weatherResponse","forecastResponse","Promise","all","get","params","appid","units","console","log","data","error"],"sources":["C:/Users/Amitabh/Desktop/React-Projects/react-accuweather/src/API'S/openWeatherApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst WEATHER_API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\nconst WEATHER_API_URL = process.env.REACT_APP_WEATHER_API_URL;\r\n\r\nexport const fetchWeatherData = async (lat, lon) => {\r\n  try {\r\n    const [weatherResponse, forecastResponse] = await Promise.all([\r\n      axios.get(`${WEATHER_API_URL}/weather`, {\r\n        params: {\r\n          lat,\r\n          lon,\r\n          appid: WEATHER_API_KEY,\r\n          units: \"metric\",\r\n        },\r\n      }),\r\n      axios.get(`${WEATHER_API_URL}/forecast`, {\r\n        params: {\r\n          lat,\r\n          lon,\r\n          appid: WEATHER_API_KEY,\r\n          units: \"metric\",\r\n        },\r\n      }),\r\n    ]);\r\n    console.log(weatherResponse.data);\r\n    console.log(forecastResponse.data);\r\n    return [weatherResponse.data, forecastResponse.data];\r\n  } catch (error) {\r\n    console.error(\"Error fetching weather data: \", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB;AAC7D,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,yBAAyB;AAE7D,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EAClD,IAAI;IACF,MAAM,CAACC,eAAe,EAAEC,gBAAgB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC5Db,KAAK,CAACc,GAAG,CAAC,GAAGT,eAAe,UAAU,EAAE;MACtCU,MAAM,EAAE;QACNP,GAAG;QACHC,GAAG;QACHO,KAAK,EAAEf,eAAe;QACtBgB,KAAK,EAAE;MACT;IACF,CAAC,CAAC,EACFjB,KAAK,CAACc,GAAG,CAAC,GAAGT,eAAe,WAAW,EAAE;MACvCU,MAAM,EAAE;QACNP,GAAG;QACHC,GAAG;QACHO,KAAK,EAAEf,eAAe;QACtBgB,KAAK,EAAE;MACT;IACF,CAAC,CAAC,CACH,CAAC;IACFC,OAAO,CAACC,GAAG,CAACT,eAAe,CAACU,IAAI,CAAC;IACjCF,OAAO,CAACC,GAAG,CAACR,gBAAgB,CAACS,IAAI,CAAC;IAClC,OAAO,CAACV,eAAe,CAACU,IAAI,EAAET,gBAAgB,CAACS,IAAI,CAAC;EACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}