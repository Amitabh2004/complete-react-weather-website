{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nasync function fetchIPLocation(ip) {\n  try {\n    const response = await axios.get(`http://ip-api.com/json/${ip}`);\n    return response.data;\n  } catch (error) {\n    console.log(\"Error fetching IP location data: \", error);\n    return null;\n  }\n}\nconst useIPLocation = () => {\n  _s();\n  const [ip, setIP] = useState(\"\");\n  const [locationData, setLocationData] = useState(null);\n  useEffect(() => {\n    const fetchIP = async () => {\n      try {\n        const response = await axios.get(\"https://api.ipify.org?format=json\");\n        console.log(response.data.ip);\n        setIP(response.data.ip);\n      } catch (error) {\n        console.log(\"Error fetching IP address: \", error);\n      }\n    };\n    fetchIP();\n  }, []);\n  useEffect(() => {\n    if (ip) {\n      const fetchLocation = async () => {\n        const data = await fetchIPLocation(ip);\n        console.log(data);\n        setLocationData(data);\n      };\n      fetchLocation();\n    }\n  }, [ip]);\n  return locationData;\n};\n_s(useIPLocation, \"r5s0QAznJKKztdh7podQ1O8ldkM=\");\nexport default useIPLocation;","map":{"version":3,"names":["useState","useEffect","axios","fetchIPLocation","ip","response","get","data","error","console","log","useIPLocation","_s","setIP","locationData","setLocationData","fetchIP","fetchLocation"],"sources":["C:/Users/Amitabh/Desktop/React-Projects/react-accuweather/src/API'S/IPLocation .js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nasync function fetchIPLocation(ip) {\r\n  try {\r\n    const response = await axios.get(`http://ip-api.com/json/${ip}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"Error fetching IP location data: \", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nconst useIPLocation = () => {\r\n  const [ip, setIP] = useState(\"\");\r\n  const [locationData, setLocationData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchIP = async () => {\r\n      try {\r\n        const response = await axios.get(\"https://api.ipify.org?format=json\");\r\n        console.log(response.data.ip);\r\n        setIP(response.data.ip);\r\n      } catch (error) {\r\n        console.log(\"Error fetching IP address: \", error);\r\n      }\r\n    };\r\n    fetchIP();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (ip) {\r\n      const fetchLocation = async () => {\r\n        const data = await fetchIPLocation(ip);\r\n        console.log(data);\r\n        setLocationData(data);\r\n      };\r\n      fetchLocation();\r\n    }\r\n  }, [ip]);\r\n\r\n  return locationData;\r\n};\r\n\r\nexport default useIPLocation;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAeC,eAAeA,CAACC,EAAE,EAAE;EACjC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,0BAA0BF,EAAE,EAAE,CAAC;IAChE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEF,KAAK,CAAC;IACvD,OAAO,IAAI;EACb;AACF;AAEA,MAAMG,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACR,EAAE,EAAES,KAAK,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMe,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMX,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,mCAAmC,CAAC;QACrEG,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACE,IAAI,CAACH,EAAE,CAAC;QAC7BS,KAAK,CAACR,QAAQ,CAACE,IAAI,CAACH,EAAE,CAAC;MACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC;MACnD;IACF,CAAC;IACDQ,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACd,IAAIG,EAAE,EAAE;MACN,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;QAChC,MAAMV,IAAI,GAAG,MAAMJ,eAAe,CAACC,EAAE,CAAC;QACtCK,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBQ,eAAe,CAACR,IAAI,CAAC;MACvB,CAAC;MACDU,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACb,EAAE,CAAC,CAAC;EAER,OAAOU,YAAY;AACrB,CAAC;AAACF,EAAA,CA7BID,aAAa;AA+BnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}