{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amitabh\\\\Desktop\\\\React-Projects\\\\react-accuweather\\\\src\\\\HomeComponents\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./main.css\";\nimport * as openWeatherApi from \"../API'S/openWeatherApi\";\nimport useIPLocation from \"../API'S/IPLocation \";\nimport SideBar from \"./Sidebar\";\nimport SearchBar from \"./SearchBar\";\nimport SunnyImg from \"../images/icons/01d.png\";\nimport ClearSkyNight from \"../images/icons/01n.png\";\nimport FewCloudsDay from \"../images/icons/02d.png\";\nimport FewCloudsNight from \"../images/icons/02n.png\";\nimport ScatteredClouds from \"../images/icons/03d.png\";\nimport BrokenClouds from \"../images/icons/04d.png\";\nimport ShowerRain from \"../images/icons/09d.png\";\nimport RainDay from \"../images/icons/10d.png\";\nimport RainNight from \"../images/icons/10n.png\";\nimport Thunderstorm from \"../images/icons/11d.png\";\nimport Snow from \"../images/icons/13d.png\";\nimport Mist from \"../images/icons/50d.png\";\nimport UnknownWeather from \"../images/icons/unknown.png\";\nimport ThermometerImg from \"../images/Thermometer.png\";\nimport WindImg from \"../images/Winds.png\";\nimport DropImg from \"../images/RainDrop.png\";\nimport HumidityImg from \"../images/Humidity.png\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport convertTo12HourFormat from \"./utilities.js/convertTo12HourFormat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const locationData = useIPLocation();\n  useEffect(() => {\n    const fetchInitialWeather = async () => {\n      if (locationData) {\n        try {\n          const {\n            lat,\n            lon\n          } = locationData;\n          const [weather, forecast] = await openWeatherApi.fetchWeatherData(lat, lon);\n          setWeatherData(weather);\n          setForecastData(forecast);\n        } catch (error) {\n          console.error(\"Error fetching initial weather data:\", error);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    fetchInitialWeather();\n  }, [locationData]);\n  const handleCityNameChange = async city => {\n    const {\n      latitude,\n      longitude\n    } = city;\n    try {\n      setLoading(true);\n      const [weather, forecast] = await openWeatherApi.fetchWeatherData(latitude, longitude);\n      setWeatherData(weather);\n      setForecastData(forecast);\n    } catch (error) {\n      console.error(\"Error fetching weather data\", error);\n      setWeatherData(null);\n      setForecastData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const aggregatedData = forecastData ? aggregateDailyData(groupDataByDay(forecastData)) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\",\n        position: \"fixed\",\n        top: 0,\n        left: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-2-3-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-2\",\n          children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n            handleCityNameChange: handleCityNameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Temperature, {\n            weatherData: weatherData,\n            loading: loading,\n            forecastData: forecastData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TodaysForecast, {\n            loading: loading,\n            forecastData: forecastData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Airconditions, {\n            weatherData: weatherData,\n            forecastData: forecastData,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-3\",\n          children: /*#__PURE__*/_jsxDEV(SevenDayForecast, {\n            forecast: aggregatedData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"SdAWqKAKpLA3/nFsJDEEgPhTS88=\", false, function () {\n  return [useIPLocation];\n});\n_c = Main;\nfunction getWeatherIcon(iconCode) {\n  let iconUrl;\n  switch (iconCode) {\n    case \"01d\":\n      iconUrl = SunnyImg;\n      break;\n    case \"01n\":\n      iconUrl = ClearSkyNight;\n      break;\n    case \"02d\":\n      iconUrl = FewCloudsDay;\n      break;\n    case \"02n\":\n      iconUrl = FewCloudsNight;\n      break;\n    case \"03d\":\n    case \"03n\":\n      iconUrl = ScatteredClouds;\n      break;\n    case \"04d\":\n    case \"04n\":\n      iconUrl = BrokenClouds;\n      break;\n    case \"09d\":\n    case \"09n\":\n      iconUrl = ShowerRain;\n      break;\n    case \"10d\":\n      iconUrl = RainDay;\n      break;\n    case \"10n\":\n      iconUrl = RainNight;\n      break;\n    case \"11d\":\n    case \"11n\":\n      iconUrl = Thunderstorm;\n      break;\n    case \"13d\":\n    case \"13n\":\n      iconUrl = Snow;\n      break;\n    case \"50d\":\n    case \"50n\":\n      iconUrl = Mist;\n      break;\n    default:\n      iconUrl = UnknownWeather;\n      break;\n  }\n  return iconUrl;\n}\nfunction Temperature({\n  weatherData,\n  loading,\n  forecastData\n}) {\n  if (!weatherData || !forecastData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\",\n        margin: \"60px 0px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  }\n  let chanceOfRain = \"0%\";\n  if (forecastData && forecastData.list && forecastData.list.length > 0) {\n    const firstForecast = forecastData.list[0];\n    if (firstForecast.pop && firstForecast.pop !== undefined) {\n      chanceOfRain = `${Math.round(firstForecast.pop * 100)}%`;\n    }\n  }\n  const iconUrl = getWeatherIcon(weatherData.weather[0].icon);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"temp-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"city-text\",\n          children: weatherData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chance-text\",\n          children: [\"Chance of rain:\", \" \", chanceOfRain]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"degree-text\",\n          children: `${Math.round(weatherData.main.temp)}Â°C`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-box\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconUrl,\n        alt: \"weather-condition\",\n        className: \"cond-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Temperature;\nfunction TodaysForecast({\n  loading,\n  forecastData\n}) {\n  if (loading || !forecastData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\",\n        margin: \"60px 0px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todays-forecast-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-text-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"forecast-text\",\n        children: \"TODAY'S FORECAST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"big-forecast-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"f-1-div\",\n          children: [forecastData.list.slice(1, 4).map((forecast, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(VerticalLine, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ForecastComponent, {\n              forecast: forecast,\n              forecastData: forecastData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(VerticalLine, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"f-2-div\",\n          children: [forecastData.list.slice(4, 7).map((forecast, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(VerticalLine, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ForecastComponent, {\n              forecast: forecast,\n              forecastData: forecastData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(VerticalLine, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n_c3 = TodaysForecast;\nfunction VerticalLine() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vertical-line\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 9\n  }, this);\n}\n_c4 = VerticalLine;\nfunction ForecastComponent({\n  forecast,\n  forecastData\n}) {\n  if (!forecastData) {\n    return null;\n  }\n  const isNow = forecast === forecastData.list[1];\n  const dateTime = new Date(forecast.dt_txt);\n  const temp_time = dateTime.toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  });\n  const time = isNow ? \"Now\" : convertTo12HourFormat(temp_time);\n  const iconUrl = getWeatherIcon(forecast.weather[0].icon);\n  const temperature = Math.round(forecast.main.temp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"time\",\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: iconUrl,\n      alt: \"img..\",\n      className: \"small-cond-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"forecast-temp\",\n      children: [temperature, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n_c5 = ForecastComponent;\nfunction Airconditions({\n  weatherData,\n  loading,\n  forecastData\n}) {\n  if (!weatherData || !forecastData) {\n    return null;\n  }\n  const realFeel = weatherData.main ? `${Math.round(weatherData.main.feels_like)}Â°` : \"\";\n  let chanceOfRain = \"0%\";\n  if (forecastData && forecastData.list && forecastData.list.length > 0) {\n    const firstForecast = forecastData.list[0];\n    if (firstForecast.pop && firstForecast.pop !== undefined) {\n      chanceOfRain = `${Math.round(firstForecast.pop * 100)}%`;\n    }\n  }\n  const windSpeed = weatherData.wind ? `${weatherData.wind.speed} km/h` : \"\";\n  const pressure = weatherData.main ? `${weatherData.main.humidity}%` : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"air-condition-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"one-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"air-condition-text\",\n        children: \"AIR CONDITIONS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AirconditionComponent, {\n        icon: ThermometerImg,\n        text: \"Real Feel\",\n        statistics: realFeel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AirconditionComponent, {\n        icon: DropImg,\n        text: \"Chance of rain\",\n        statistics: chanceOfRain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tp-flex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"two-three-main-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"two-flex\",\n        children: [/*#__PURE__*/_jsxDEV(AirconditionComponent, {\n          icon: WindImg,\n          text: \"Wind\",\n          statistics: windSpeed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AirconditionComponent, {\n          icon: HumidityImg,\n          text: \"Humidity\",\n          statistics: pressure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"three-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"see-more-btn\",\n          children: \"See more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n}\n_c6 = Airconditions;\nfunction AirconditionComponent({\n  icon,\n  text,\n  statistics\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"real-feel-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"real-feel-img-box\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon,\n        className: \"feel-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"real-feel-statistics\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"feel-text\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"feel-temp\",\n        children: statistics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n}\n_c7 = AirconditionComponent;\nfunction SevenDayForecast({\n  forecast\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sevenday-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sevenday-text\",\n      children: \"7-DAY FORECAST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), forecast.map((day, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SevenDayComponent, {\n        day: day,\n        isToday: index === 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), index < forecast.length - 1 && /*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 43\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n}\n_c8 = SevenDayForecast;\nfunction HorizontalLine() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"horizontal-line\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 9\n  }, this);\n}\n// Group data by day\n_c9 = HorizontalLine;\nconst groupDataByDay = data => {\n  const days = {};\n  data.list.forEach(item => {\n    const date = new Date(item.dt * 1000).toISOString().split('T')[0]; // Convert Unix timestamp to date\n    if (!days[date]) {\n      days[date] = [];\n    }\n    days[date].push(item);\n  });\n  return days;\n};\n\n// Aggregate daily data\nconst aggregateDailyData = groupedData => {\n  const dailyData = [];\n  for (const date in groupedData) {\n    const dayData = groupedData[date];\n    const daySummary = {\n      date: date,\n      dayOfWeek: new Date(date).toLocaleDateString(\"en-US\", {\n        weekday: \"long\"\n      }),\n      avgTemp: 0,\n      minTemp: Infinity,\n      maxTemp: -Infinity,\n      condition: \"\",\n      icon: \"\"\n    };\n    const weatherConditions = {};\n    const weatherIcons = {};\n    dayData.forEach(item => {\n      daySummary.avgTemp += item.main.temp;\n      if (item.main.temp_min < daySummary.minTemp) {\n        daySummary.minTemp = item.main.temp_min;\n      }\n      if (item.main.temp_max > daySummary.maxTemp) {\n        daySummary.maxTemp = item.main.temp_max;\n      }\n      const condition = item.weather[0].main;\n      weatherConditions[condition] = (weatherConditions[condition] || 0) + 1;\n      const icon = item.weather[0].icon;\n      weatherIcons[icon] = (weatherIcons[icon] || 0) + 1;\n    });\n    daySummary.avgTemp /= dayData.length;\n\n    // Determine the most frequent weather condition\n    daySummary.condition = Object.keys(weatherConditions).reduce((a, b) => weatherConditions[a] > weatherConditions[b] ? a : b);\n\n    // Determine the most frequent weather icon\n    daySummary.icon = Object.keys(weatherIcons).reduce((a, b) => weatherIcons[a] > weatherIcons[b] ? a : b);\n    dailyData.push(daySummary);\n  }\n  return dailyData;\n};\nfunction SevenDayComponent({\n  day,\n  isToday\n}) {\n  const max_temp = Math.round(day.maxTemp);\n  const min_temp = Math.round(day.minTemp);\n  const icon = getWeatherIcon;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"big-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"seven-text\",\n        children: isToday ? \"Today\" : day.dayOfWeek\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cond-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: SunnyImg,\n          className: \"seven-img\",\n          alt: day.condition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"seven-cond-text\",\n          children: day.condition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-max-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"statistics-text-1\",\n          children: max_temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"statistics-text-2\",\n          children: [\"/\", min_temp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 457,\n    columnNumber: 5\n  }, this);\n}\n_c10 = SevenDayComponent;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"Temperature\");\n$RefreshReg$(_c3, \"TodaysForecast\");\n$RefreshReg$(_c4, \"VerticalLine\");\n$RefreshReg$(_c5, \"ForecastComponent\");\n$RefreshReg$(_c6, \"Airconditions\");\n$RefreshReg$(_c7, \"AirconditionComponent\");\n$RefreshReg$(_c8, \"SevenDayForecast\");\n$RefreshReg$(_c9, \"HorizontalLine\");\n$RefreshReg$(_c10, \"SevenDayComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","openWeatherApi","useIPLocation","SideBar","SearchBar","SunnyImg","ClearSkyNight","FewCloudsDay","FewCloudsNight","ScatteredClouds","BrokenClouds","ShowerRain","RainDay","RainNight","Thunderstorm","Snow","Mist","UnknownWeather","ThermometerImg","WindImg","DropImg","HumidityImg","CircularProgress","Box","LinearProgress","convertTo12HourFormat","jsxDEV","_jsxDEV","Main","_s","weatherData","setWeatherData","forecastData","setForecastData","loading","setLoading","locationData","fetchInitialWeather","lat","lon","weather","forecast","fetchWeatherData","error","console","handleCityNameChange","city","latitude","longitude","aggregatedData","aggregateDailyData","groupDataByDay","children","sx","width","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","className","Temperature","TodaysForecast","Airconditions","SevenDayForecast","_c","getWeatherIcon","iconCode","iconUrl","style","height","margin","display","alignItems","justifyContent","chanceOfRain","list","length","firstForecast","pop","undefined","Math","round","icon","name","main","temp","src","alt","_c2","slice","map","index","Fragment","VerticalLine","ForecastComponent","_c3","_c4","isNow","dateTime","Date","dt_txt","temp_time","toLocaleTimeString","hour","minute","time","temperature","_c5","realFeel","feels_like","windSpeed","wind","speed","pressure","humidity","AirconditionComponent","text","statistics","_c6","_c7","day","SevenDayComponent","isToday","HorizontalLine","_c8","_c9","data","days","forEach","item","date","dt","toISOString","split","push","groupedData","dailyData","dayData","daySummary","dayOfWeek","toLocaleDateString","weekday","avgTemp","minTemp","Infinity","maxTemp","condition","weatherConditions","weatherIcons","temp_min","temp_max","Object","keys","reduce","a","b","max_temp","min_temp","_c10","$RefreshReg$"],"sources":["C:/Users/Amitabh/Desktop/React-Projects/react-accuweather/src/HomeComponents/Main.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport axios from 'axios';\r\nimport \"./main.css\";\r\nimport * as openWeatherApi from \"../API'S/openWeatherApi\"\r\nimport useIPLocation from \"../API'S/IPLocation \";\r\nimport SideBar from \"./Sidebar\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport SunnyImg from \"../images/icons/01d.png\";\r\nimport ClearSkyNight from \"../images/icons/01n.png\";\r\nimport FewCloudsDay from \"../images/icons/02d.png\";\r\nimport FewCloudsNight from \"../images/icons/02n.png\";\r\nimport ScatteredClouds from \"../images/icons/03d.png\"; \r\nimport BrokenClouds from \"../images/icons/04d.png\";\r\nimport ShowerRain from \"../images/icons/09d.png\"; \r\nimport RainDay from \"../images/icons/10d.png\";\r\nimport RainNight from \"../images/icons/10n.png\";\r\nimport Thunderstorm from \"../images/icons/11d.png\";\r\nimport Snow from \"../images/icons/13d.png\"; \r\nimport Mist from \"../images/icons/50d.png\"; \r\nimport UnknownWeather from \"../images/icons/unknown.png\";\r\nimport ThermometerImg from \"../images/Thermometer.png\";\r\nimport WindImg from \"../images/Winds.png\";\r\nimport DropImg from \"../images/RainDrop.png\";\r\nimport HumidityImg from \"../images/Humidity.png\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport convertTo12HourFormat from \"./utilities.js/convertTo12HourFormat\";\r\n\r\n\r\nexport default function Main() {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [forecastData, setForecastData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const locationData = useIPLocation();\r\n\r\n  useEffect(() => {\r\n    const fetchInitialWeather = async () => {\r\n      if (locationData) {\r\n        try {\r\n          const { lat, lon } = locationData;\r\n          const [weather, forecast] = await openWeatherApi.fetchWeatherData(\r\n            lat,\r\n            lon\r\n          );\r\n          setWeatherData(weather);\r\n          setForecastData(forecast);\r\n        } catch (error) {\r\n          console.error(\"Error fetching initial weather data:\", error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchInitialWeather();\r\n  }, [locationData]);\r\n\r\n  const handleCityNameChange = async (city) => {\r\n    const { latitude, longitude } = city;\r\n    try {\r\n      setLoading(true);\r\n      const [weather, forecast] = await openWeatherApi.fetchWeatherData(\r\n        latitude,\r\n        longitude\r\n      );\r\n      setWeatherData(weather);\r\n      setForecastData(forecast);\r\n    } catch (error) {\r\n      console.error(\"Error fetching weather data\", error);\r\n      setWeatherData(null);\r\n      setForecastData(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const aggregatedData = forecastData\r\n    ? aggregateDailyData(groupDataByDay(forecastData))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      {loading && (\r\n        <Box sx={{ width: \"100%\", position: \"fixed\", top: 0, left: 0 }}>\r\n          <LinearProgress />\r\n        </Box>\r\n      )}\r\n      <div className=\"flex\">\r\n        <div className=\"flex-1\">\r\n          <SideBar />\r\n        </div>\r\n        <div className=\"flex-2-3-main\">\r\n          <div className=\"flex-2\">\r\n            <SearchBar handleCityNameChange={handleCityNameChange} />\r\n            <Temperature\r\n              weatherData={weatherData}\r\n              loading={loading}\r\n              forecastData={forecastData}\r\n            />\r\n            <TodaysForecast loading={loading} forecastData={forecastData} />\r\n            <Airconditions\r\n              weatherData={weatherData}\r\n              forecastData={forecastData}\r\n              loading={loading}\r\n            />\r\n          </div>\r\n          <div className=\"flex-3\">\r\n            <SevenDayForecast forecast={aggregatedData} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n function getWeatherIcon(iconCode) {\r\n  let iconUrl;\r\n\r\n  switch (iconCode) {\r\n    case \"01d\":\r\n      iconUrl = SunnyImg;\r\n      break;\r\n    case \"01n\":\r\n      iconUrl = ClearSkyNight;\r\n      break;\r\n    case \"02d\":\r\n      iconUrl = FewCloudsDay;\r\n      break;\r\n    case \"02n\":\r\n      iconUrl = FewCloudsNight;\r\n      break;\r\n    case \"03d\":\r\n    case \"03n\":\r\n      iconUrl = ScatteredClouds;\r\n      break;\r\n    case \"04d\":\r\n    case \"04n\":\r\n      iconUrl = BrokenClouds;\r\n      break;\r\n    case \"09d\":\r\n    case \"09n\":\r\n      iconUrl = ShowerRain;\r\n      break;\r\n    case \"10d\":\r\n      iconUrl = RainDay;\r\n      break;\r\n    case \"10n\":\r\n      iconUrl = RainNight;\r\n      break;\r\n    case \"11d\":\r\n    case \"11n\":\r\n      iconUrl = Thunderstorm;\r\n      break;\r\n    case \"13d\":\r\n    case \"13n\":\r\n      iconUrl = Snow;\r\n      break;\r\n    case \"50d\":\r\n    case \"50n\":\r\n      iconUrl = Mist;\r\n      break;\r\n    default:\r\n      iconUrl = UnknownWeather;\r\n      break;\r\n  }\r\n\r\n  return iconUrl;\r\n}\r\n\r\nfunction Temperature({ weatherData, loading ,forecastData}) {\r\n\r\n  if (!weatherData || !forecastData) {\r\n    return (\r\n      <div style={{height:\"100%\", margin:\"60px 0px\" ,display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n         <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n    let chanceOfRain = \"0%\";\r\n    if (forecastData && forecastData.list && forecastData.list.length > 0) {\r\n      const firstForecast = forecastData.list[0];\r\n      if (firstForecast.pop && firstForecast.pop !== undefined) {\r\n        chanceOfRain = `${Math.round(firstForecast.pop * 100)}%`;\r\n      }\r\n    }\r\n\r\nconst iconUrl = getWeatherIcon(weatherData.weather[0].icon);\r\n\r\n  return (\r\n    <div className=\"temp-box\">\r\n      <div className=\"statistics-box\">\r\n        <div className=\"city-box\">\r\n          <span className=\"city-text\">{weatherData.name}</span>\r\n          <span className=\"chance-text\">\r\n            Chance of rain:{\" \"}{chanceOfRain}\r\n          </span>\r\n          <span className=\"degree-text\">{`${Math.round(\r\n            weatherData.main.temp\r\n          )}Â°C`}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"img-box\">\r\n        <img src={iconUrl} alt=\"weather-condition\" className=\"cond-img\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction TodaysForecast({loading , forecastData}) {\r\n    if (loading || !forecastData) {\r\n      return (\r\n        <div\r\n          style={{\r\n            height: \"100%\",\r\n            margin: \"60px 0px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"todays-forecast-box\">\r\n      <div className=\"forecast-text-box\">\r\n        <span className=\"forecast-text\">TODAY'S FORECAST</span>\r\n        <div className=\"big-forecast-box\">\r\n          <div className=\"f-1-div\">\r\n            {forecastData.list.slice(1, 4).map((forecast, index) => (\r\n              <React.Fragment key={index}>\r\n                <VerticalLine />\r\n                <ForecastComponent forecast={forecast} \r\n                forecastData={forecastData}\r\n                />\r\n              </React.Fragment>\r\n            ))}\r\n            <VerticalLine />\r\n          </div>\r\n          <div className=\"f-2-div\">\r\n            {forecastData.list.slice(4, 7).map((forecast, index) => (\r\n              <React.Fragment key={index}>\r\n                <VerticalLine />\r\n                <ForecastComponent forecast={forecast}\r\n                forecastData={forecastData} />\r\n              </React.Fragment>\r\n            ))}\r\n            <VerticalLine />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction VerticalLine(){\r\n    return (\r\n        <div className=\"vertical-line\"></div>\r\n    );\r\n}\r\n\r\nfunction ForecastComponent({forecast,forecastData}) {\r\n  if(!forecastData){\r\n    return null;\r\n  }\r\n  const isNow = forecast === forecastData.list[1];\r\n  const dateTime = new Date(forecast.dt_txt);\r\n  const temp_time = dateTime.toLocaleTimeString([], {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  });\r\n  const time = isNow? \"Now\": convertTo12HourFormat(temp_time);\r\n\r\n  const iconUrl = getWeatherIcon(forecast.weather[0].icon);\r\n  const temperature = Math.round((forecast.main.temp));\r\n  return (\r\n    <div className=\"forecast-box\">\r\n      <span className=\"time\">{time}</span>\r\n      <img src={iconUrl} alt=\"img..\" className=\"small-cond-img\" />\r\n      <span className=\"forecast-temp\">{temperature}&deg;</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Airconditions({ weatherData, loading, forecastData }) {\r\n\r\n  if (!weatherData || !forecastData) {\r\n    return null;\r\n  }\r\n\r\n  const realFeel = weatherData.main\r\n    ? `${Math.round(weatherData.main.feels_like)}Â°`\r\n    : \"\";\r\n\r\n  let chanceOfRain = \"0%\";\r\n  if (forecastData && forecastData.list && forecastData.list.length > 0) {\r\n    const firstForecast = forecastData.list[0];\r\n    if (firstForecast.pop && firstForecast.pop !== undefined) {\r\n      chanceOfRain = `${Math.round(firstForecast.pop * 100)}%`;\r\n    }\r\n  }\r\n\r\n  const windSpeed = weatherData.wind ? `${weatherData.wind.speed} km/h` : \"\";\r\n  const pressure = weatherData.main ? `${weatherData.main.humidity}%` : \"\";\r\n\r\n  return (\r\n    <div className=\"air-condition-box\">\r\n      <div className=\"one-flex\">\r\n        <span className=\"air-condition-text\">AIR CONDITIONS</span>\r\n        <AirconditionComponent\r\n          icon={ThermometerImg}\r\n          text=\"Real Feel\"\r\n          statistics={realFeel}\r\n        />\r\n        <AirconditionComponent\r\n          icon={DropImg}\r\n          text=\"Chance of rain\"\r\n          statistics={chanceOfRain}\r\n        />\r\n      </div>\r\n      <div className=\"tp-flex\"></div>\r\n      <div className=\"two-three-main-flex\">\r\n        <div className=\"two-flex\">\r\n          <AirconditionComponent\r\n            icon={WindImg}\r\n            text=\"Wind\"\r\n            statistics={windSpeed}\r\n          />\r\n          <AirconditionComponent\r\n            icon={HumidityImg}\r\n            text=\"Humidity\"\r\n            statistics={pressure}\r\n          />\r\n        </div>\r\n        <div className=\"three-flex\">\r\n          <button className=\"see-more-btn\">See more</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction AirconditionComponent({ icon, text, statistics }) {\r\n  return (\r\n    <div className=\"real-feel-box\">\r\n      <div className=\"real-feel-img-box\">\r\n        <img src={icon} className=\"feel-img\" />\r\n      </div>\r\n      <div className=\"real-feel-statistics\">\r\n        <span className=\"feel-text\">{text}</span>\r\n        <span className=\"feel-temp\">{statistics}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SevenDayForecast({ forecast }) {\r\n  return (\r\n    <div className=\"sevenday-box\">\r\n      <span className=\"sevenday-text\">7-DAY FORECAST</span>\r\n      {forecast.map((day, index) => (\r\n        <React.Fragment key={index}>\r\n          <SevenDayComponent day={day} isToday={index === 0} />\r\n          {index < forecast.length - 1 && <HorizontalLine />}\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nfunction HorizontalLine(){\r\n    return(\r\n        <div className=\"horizontal-line\">\r\n        </div>\r\n    );\r\n}\r\n// Group data by day\r\nconst groupDataByDay = (data) => {\r\n  const days = {};\r\n\r\n  data.list.forEach(item => {\r\n    const date = new Date(item.dt * 1000).toISOString().split('T')[0]; // Convert Unix timestamp to date\r\n    if (!days[date]) {\r\n      days[date] = [];\r\n    }\r\n    days[date].push(item);\r\n  });\r\n\r\n  return days;\r\n};\r\n\r\n// Aggregate daily data\r\nconst aggregateDailyData = (groupedData) => {\r\n  const dailyData = [];\r\n\r\n  for (const date in groupedData) {\r\n    const dayData = groupedData[date];\r\n    const daySummary = {\r\n      date: date,\r\n      dayOfWeek: new Date(date).toLocaleDateString(\"en-US\", {\r\n        weekday: \"long\",\r\n      }),\r\n      avgTemp: 0,\r\n      minTemp: Infinity,\r\n      maxTemp: -Infinity,\r\n      condition: \"\",\r\n      icon: \"\",\r\n    };\r\n\r\n    const weatherConditions = {};\r\n    const weatherIcons = {};\r\n\r\n    dayData.forEach((item) => {\r\n      daySummary.avgTemp += item.main.temp;\r\n      if (item.main.temp_min < daySummary.minTemp) {\r\n        daySummary.minTemp = item.main.temp_min;\r\n      }\r\n      if (item.main.temp_max > daySummary.maxTemp) {\r\n        daySummary.maxTemp = item.main.temp_max;\r\n      }\r\n\r\n      const condition = item.weather[0].main;\r\n      weatherConditions[condition] = (weatherConditions[condition] || 0) + 1;\r\n\r\n      const icon = item.weather[0].icon;\r\n      weatherIcons[icon] = (weatherIcons[icon] || 0) + 1;\r\n    });\r\n\r\n    daySummary.avgTemp /= dayData.length;\r\n\r\n    // Determine the most frequent weather condition\r\n    daySummary.condition = Object.keys(weatherConditions).reduce((a, b) =>\r\n      weatherConditions[a] > weatherConditions[b] ? a : b\r\n    );\r\n\r\n    // Determine the most frequent weather icon\r\n    daySummary.icon = Object.keys(weatherIcons).reduce((a, b) =>\r\n      weatherIcons[a] > weatherIcons[b] ? a : b\r\n    );\r\n\r\n    dailyData.push(daySummary);\r\n  }\r\n\r\n  return dailyData;\r\n};\r\n\r\n\r\nfunction SevenDayComponent({ day, isToday }) {\r\n  const max_temp = Math.round(day.maxTemp);\r\n  const min_temp = Math.round(day.minTemp);\r\n  const icon = getWeatherIcon\r\n  return (\r\n    <div className=\"big-box\">\r\n      <div className=\"text-box\">\r\n        <span className=\"seven-text\">{isToday ? \"Today\" : day.dayOfWeek}</span>\r\n        <div className=\"cond-box\">\r\n          <img src={SunnyImg} className=\"seven-img\" alt={day.condition} />\r\n          <span className=\"seven-cond-text\">{day.condition}</span>\r\n        </div>\r\n        <div className=\"min-max-div\">\r\n          <span className=\"statistics-text-1\">{max_temp}</span>\r\n          <span className=\"statistics-text-2\">/{min_temp}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}