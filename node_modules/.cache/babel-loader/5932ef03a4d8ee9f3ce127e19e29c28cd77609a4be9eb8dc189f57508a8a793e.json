{"ast":null,"code":"export default function convertTo12HourFormat(timeString) {\n  const [hours24, minutes] = timeString.split(\":\").map(num => parseInt(num, 10));\n  const period = hours24 >= 12 ? \"PM\" : \"AM\";\n  let hours12 = hours24 % 12;\n  hours12 = hours12 === 0 ? 12 : hours12;\n  const formattedTime = `${hours12}:${minutes < 10 ? \"0\" + minutes : minutes} ${period}`;\n  return formattedTime;\n}","map":{"version":3,"names":["convertTo12HourFormat","timeString","hours24","minutes","split","map","num","parseInt","period","hours12","formattedTime"],"sources":["C:/Users/Amitabh/Desktop/React-Projects/react-accuweather/src/HomeComponents/utilities.js/convertTo12HourFormat.js"],"sourcesContent":["export default function convertTo12HourFormat(timeString) {\r\n  const [hours24, minutes] = timeString\r\n    .split(\":\")\r\n    .map((num) => parseInt(num, 10));\r\n\r\n  const period = hours24 >= 12 ? \"PM\" : \"AM\";\r\n\r\n  let hours12 = hours24 % 12;\r\n  hours12 = hours12 === 0 ? 12 : hours12; \r\n\r\n  const formattedTime = `${hours12}:${\r\n    minutes < 10 ? \"0\" + minutes : minutes\r\n  } ${period}`;\r\n\r\n  return formattedTime;\r\n}\r\n"],"mappings":"AAAA,eAAe,SAASA,qBAAqBA,CAACC,UAAU,EAAE;EACxD,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGF,UAAU,CAClCG,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAEC,GAAG,IAAKC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC,CAAC;EAElC,MAAME,MAAM,GAAGN,OAAO,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;EAE1C,IAAIO,OAAO,GAAGP,OAAO,GAAG,EAAE;EAC1BO,OAAO,GAAGA,OAAO,KAAK,CAAC,GAAG,EAAE,GAAGA,OAAO;EAEtC,MAAMC,aAAa,GAAG,GAAGD,OAAO,IAC9BN,OAAO,GAAG,EAAE,GAAG,GAAG,GAAGA,OAAO,GAAGA,OAAO,IACpCK,MAAM,EAAE;EAEZ,OAAOE,aAAa;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}